@page "/Modelo/Edit"
@page "/Modelo/Edit/{AporteId:int}"
@inject AporteService aporteService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<EditForm Model="Modelos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card-header bg-primary text-center text-white py-2 rounded">
        <h3 style="font-weight: bold;" class="font-weight-bold">Modificar Modelo</h3>
    </div>

    <div class="card-body">

        @*AporteId*@
        <div class="mb-3">
            <label for="AporteId" class="form-label">AporteId:</label>
            <InputNumber @bind-Value="Modelos.AporteId" class="form-control" />
        </div>

        @*Fecha*@
        <div class="mb-3">
            <label for="Fecha" class="form-label">Fecha:</label>
            <InputDate @bind-Value="Modelos.Fecha" class="form-control" />
        </div>

        @*Persona*@
        <div class="mb-3">
            <label for="Persona" class="form-label">Persona:</label>
            <InputText @bind-Value="Modelos.Persona" class="form-control" />
            <ValidationMessage For="@(()=>Modelos.Persona)" />
        </div>

        @*Observacion*@
        <div class="mb-3">
            <label for="Observacion" class="form-label">Observacion:</label>
            <InputText @bind-Value="Modelos.Observacion" class="form-control" />
        </div>

        @*Monto*@
        <div class="mb-3">
            <label for="Monto" class="form-label">Monto:</label>
            <InputNumber @bind-Value="Modelos.Monto" class="form-control" />
        </div>

    </div>

    <div class="card-footer d-flex justify-content-lg-center text-center">
        <div class="btn-group">
            <button type="button" class="btn btn-outline-primary ml-2" @onclick="Nuevo"><span class="bi bi-plus-circle"></span>Nuevo</button>
            <button type="button" class="btn btn-outline-success ml-2" @onclick="Guardar"><span class="bi bi-check-circle-fill"></span>Guardar</button>
            <button type="button" class="btn btn-outline-danger" @onclick="Retroceder"><span class="bi bi-arrow-bar-left"></span>Retroceder</button>

        </div>

    </div>

</EditForm>

@code {
    [Parameter]
    public int AporteId { get; set; }
    public Modelo Modelos { get; set; } = new Modelo();
    public bool existe = false;

    public async Task Buscar()
    {

        existe = false;
        var modeloEncontrado = await aporteService.Buscar(AporteId);
        if (modeloEncontrado != null)
        {
            Modelos = modeloEncontrado;
        }
        else
        {
            Nuevo();
        }
    }

    public async Task Nuevo()
    {
        Modelos = new Modelo();

    }

    public async Task<bool> Validar()
    {
        var listaModelos = await aporteService.Listar(m => m.Persona.ToLower() == Modelos.Persona.ToLower()
        && m.AporteId != Modelos.AporteId);
        existe = listaModelos.Any();
        return !existe;
    }

    public async Task Retroceder()
    {
        navigationManager.NavigateTo("/Modelo/Index");
    }

    public async Task Guardar()
    {
        if (!await Validar())
        {

            return;
        }

        var resultado = await aporteService.Guardar(Modelos);
        if (resultado)
        {

            await Retroceder();
        }

    }
}